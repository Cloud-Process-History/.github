name: Deploy Lambda Artifact

on:
  workflow_dispatch:
    inputs:
      accountNumber:
        description: 'AWS Account where you want to deploy'
        required: true
      lambda_version:
        description: 'Package version'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      lambda_package_name: <your-lambda-package-name>
      s3_bucket_packaged: <your s3 for cloudformation packages>
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Python
        uses: actions/setup-python@v2
      
      - uses: Cloud-Process-History/github-action-assume-role@1.0.0
        with:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'eu-west-1'
          AWS_EXTERNAL_ID: ${{ secrets.DEPLOYMENT_EXID }}
          AWS_ROLE_TO_ASSUME: arn:aws:iam::${{ github.event.inputs.accountNumber }}:role/github-robot-access-role
          AWS_SESSION_NAME: 'github-robot'

      - name: Download Lambda Package
        run: |
            pip install ${{ env.lambda_package_name }}==${{ github.event.inputs.lambda_version }} -t dist -i https://${{ secrets.ARTIFACTORY_USER }}:${{ secrets.ARTIFACTORY_PWD }}@cepsa.jfrog.io/artifactory/api/pypi/knolar-python/simple

      - name: Get Parameters
        run: |
          MyParameter=$(aws cloudformation describe-stacks \
                      --stack-name=<your-cloudformation-stack-name> \
                      --query="Stacks[0].Outputs[?OutputKey=='<MyOutputName>'].OutputValue" \
                      --output text)
          echo "MyParameter=${MyParameter}" >> $GITHUB_ENV

      - name: Create Cloudformation Package
        run: |
          aws cloudformation package --template ${GITHUB_WORKSPACE}/iac/template.yml --s3-bucket ${{ env.s3_bucket_packaged }} --output-template-file ${GITHUB_WORKSPACE}/iac/packaged-template.yml

      - name: Deploy CloudFormation Stack
        uses: aws-actions/aws-cloudformation-github-deploy@v1.0.3
        with:
          name: <your-stack-name>
          template: iac/packaged-template.yml
          no-fail-on-empty-changeset: 1
          capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_NAMED_IAM,CAPABILITY_IAM
          parameter-overrides: >-
            MyParameter=${{ env.MyParameter }},
            MyParameter2=example